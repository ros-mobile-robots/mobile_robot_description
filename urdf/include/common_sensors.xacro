<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

<xacro:macro name="hokuyo_sensor" params=" *joint_origin parent_link visualize"> 

  <link name="hokuyo_link">
      <collision>
         <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.06 0.06 0.087"/>
        </geometry>
      </collision>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <mesh filename="file://$(find mobile_robot_description)/meshes/sensors/hokuyo.dae" />
        </geometry>
      </visual>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <xacro:insert_block name="joint_origin" />
    <parent link="${parent_link}"/>
    <child link="hokuyo_link"/>
  </joint>

  <!-- hokuyo gazebo references -->
  <gazebo reference="hokuyo_link">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>${visualize}</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>10.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!--Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples within 0.03m of the true
               reading. --> 
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="laserscan" filename="libgazebo_ros_ray_sensor.so">
            <ros>
              <namespace>/</namespace>
              <remapping>~/out:=laserscan</remapping>
            </ros>
            <output_type>sensor_msgs/LaserScan</output_type>
          </plugin>
    </sensor>
  </gazebo>
</xacro:macro>

<xacro:macro name="camera_sensor" params=" *joint_origin parent_link visualize"> 

  <link name="camera_link">
      <collision>
         <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <cylinder radius="0.03" length="0.03"/>
        </geometry>
      </collision>
      <visual>
        <origin xyz="0 0 0" rpy="0 1.57 0"/>
        <geometry>
          <cylinder radius="0.01" length="0.01"/>
        </geometry>
      </visual>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
  </link>

  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <joint name="camera_joint" type="fixed">
    <axis xyz="0 1 0" />
    <xacro:insert_block name="joint_origin" />
    <parent link="${parent_link}"/>
    <child link="camera_link"/>
  </joint>

  <gazebo reference="camera_link">
    <sensor type="camera" name="camera1">
      <update_rate>60</update_rate>
      <visualize>${visualize}</visualize>
      <camera>
        <horizontal_fov>1.92</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>B8G8R8</format>
        </image>
        <depth_camera>
        </depth_camera>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <!-- <namespace>/</namespace> -->

          <!-- topics need to be prefixed with camera_name for remapping -->
          <!-- <remapping>image_raw:=image_demo</remapping> -->
        </ros>

        <!-- omit camera_name to default to sensor name -->
        <!-- <camera_name>mycamera</camera_name> -->

        <!-- frame_name>omit so it defaults to link name</frame_name-->

      </plugin>
    </sensor>
  </gazebo>
</xacro:macro>

<xacro:macro name="imu_sensor" params=" *joint_origin parent_link"> 

  <link name="imu_link">
      <collision>
         <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.01 0.01 0.01"/>
        </geometry>
      </collision>
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <geometry>
          <box size="0.01 0.01 0.01"/>
        </geometry>
      </visual>
      <inertial>
        <mass value="1e-5" />
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
      </inertial>
  </link>

  <gazebo reference="imu_link">
    <material>Gazebo/Yellow</material>
  </gazebo>

  <joint name="imu_joint" type="fixed">
    <axis xyz="0 1 0" />
    <xacro:insert_block name="joint_origin" />
    <parent link="${parent_link}"/>
    <child link="imu_link"/>
  </joint>

  <gazebo reference="imu_link">
    <sensor type="imu" name="my_imu">
    <always_on>true</always_on>
    <!-- Publish at 30 hz -->
    <update_rate>30</update_rate>
    <plugin name="my_imu_plugin" filename="libgazebo_ros_imu_sensor.so">
      <ros>
        <!-- Will publish to /imu/data -->
        <namespace>/imu</namespace>
        <argument>~/out:=data</argument>
      </ros>
      <!-- frame_name ommited, will be "my_link" -->
    </plugin>
    </sensor>
  </gazebo>
</xacro:macro>

</robot>
